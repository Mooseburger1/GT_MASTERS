barplot(c(sum(pred == 1), sum(y==1), sum(pred==0),), names.arg = c("predictions 1", "actual 1", "predictions 0", "actual 0"))
require("kernlab")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = 50, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / 654
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
barplot(c(sum(pred == 1), sum(y==1), sum(pred==0),), names.arg = c("predictions 1", "actual 1", "predictions 0", "actual 0"))
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
setwd("~/Analytics Modeling")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
setwd("~/")
setwd("~/Analytics Modeling")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "rbfdot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("For C=", i, "\n")
print(confusionMatrix(table(pred, y), positive = "1"))
}
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
setwd("~/Analytics Modeling")
require("kernlab")
require("caret")
data <- read.csv("~/Analytics Modeling/terminacredit_card_data-headers.csv", header = TRUE)
setwd("~/Analytics Modeling/")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("For C=", i, "\n")
print(confusionMatrix(table(pred, y), positive = "1"))
}
setwd("~/Analytics Modeling/")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("For C=", i, "\n")
print(confusionMatrix(table(pred, y), positive = "1"))
print("\n\n\n\n")
}
setwd("~/Analytics Modeling/")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("For C=", i, "\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n\n\n")
}
setwd("~/Analytics Modeling/")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n\n\n")
}
setwd("~/Analytics Modeling/")
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n","\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
require("kernlab")
require("caret")
data <- read.csv("credit_card_data-headers", header = TRUE)
setwd("~/")
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n","\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\n",confusionMatrix(table(pred, y), positive = "1"),"\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
print("\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(0.1, 1, 10, 50, 100, 500, 1000)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
setwd("~/")
require("kernlab")
require("caret")
data <- read.csv("Analytics Modeling/credit_card_data-headers.csv", header = TRUE)
setwd("~/Analytics Modeling")
require("kernlab")
require("caret")
data <- read.csv("/credit_card_data-headers.csv", header = TRUE)
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("Equation")
cat("----------------------------------------------------------------")
cat(a0,"+",a[1],)"+",a[2],"+",a[3],"+",[a4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("Equation")
cat("----------------------------------------------------------------")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",[a4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("Equation")
cat("----------------------------------------------------------------")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("Equation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\nEquation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "rbfdot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\nEquation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kknn")
data = read.csv("./credit_card_data-headers.csv", header = TRUE)
accuracy_percentage <- rep(0,20)
for(j in 1:20){
pred = rep(0, nrow(data))
for(i in 1:nrow(data)){
model <- kknn(R1~., data[-i,], data[i,], k = j, scale = TRUE)
pred[i] <- round(fitted(model))
}
acc <- sum(pred == as.vector(data[,11])) / nrow(data)
accuracy_percentage[j] = acc
cat("Finished trying model with", j, "nearest neightbors","\n")
}
cat("\n\nBest performing model is model", which.max(accuracy_percentage),"with an accuracy score of", max(accuracy_percentage))
plot(accuracy_percentage, main = "KNN Accuracy", xlab = "K Nearest Neighbors", ylab = "Accuracy", col = "blue", pch=20, cex = 2, axes = FALSE)
axis(1, seq(1,20,1), col = NA, col.ticks = 1)
axis(2, seq(0.80, 0.87, 0.005), col = NA, col.ticks = 1, las=2)
abline(h=seq(0.80, 0.87, 0.005),lty=2,col="black")
require("kknn")
data = read.csv("./credit_card_data-headers.csv", header = TRUE)
accuracy_percentage <- rep(0,20)
for(j in 1:20){
pred = rep(0, nrow(data))
for(i in 1:nrow(data)){
model <- kknn(R1~., data[-i,], data[i,], k = j, scale = TRUE)
pred[i] <- round(fitted(model))
}
acc <- sum(pred == as.vector(data[,11])) / nrow(data)
cat("Finished model with", j, "nearest neightbors......................",(acc*100),"%\n")
accuracy_percentage[j] = acc
}
cat("\n\nBest performing model is model", which.max(accuracy_percentage),"with an accuracy score of", max(accuracy_percentage))
plot(accuracy_percentage, main = "KNN Accuracy", xlab = "K Nearest Neighbors", ylab = "Accuracy", col = "blue", pch=20, cex = 2, axes = FALSE)
axis(1, seq(1,20,1), col = NA, col.ticks = 1)
axis(2, seq(0.80, 0.87, 0.005), col = NA, col.ticks = 1, las=2)
abline(h=seq(0.80, 0.87, 0.005),lty=2,col="black")
require("kknn")
data = read.csv("./credit_card_data-headers.csv", header = TRUE)
accuracy_percentage <- rep(0,20)
for(j in 1:20){
pred = rep(0, nrow(data))
for(i in 1:nrow(data)){
model <- kknn(R1~., data[-i,], data[i,], k = j, scale = TRUE)
pred[i] <- round(fitted(model))
}
acc <- sum(pred == as.vector(data[,11])) / nrow(data)
cat("Finished model with", j, "nearest neightbors......................",(acc*100),"% Accuracy\n")
accuracy_percentage[j] = acc
}
cat("\n\nBest performing model is model", which.max(accuracy_percentage),"with an accuracy score of", max(accuracy_percentage))
plot(accuracy_percentage, main = "KNN Accuracy", xlab = "K Nearest Neighbors", ylab = "Accuracy", col = "blue", pch=20, cex = 2, axes = FALSE)
axis(1, seq(1,20,1), col = NA, col.ticks = 1)
axis(2, seq(0.80, 0.87, 0.005), col = NA, col.ticks = 1, las=2)
abline(h=seq(0.80, 0.87, 0.005),lty=2,col="black")
unlink('HW1_cache', recursive = TRUE)
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\nEquation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+")
cat(a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\nEquation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+")
cat(a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
require("kernlab")
require("caret")
data <- read.csv("./credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
C = c(10, 50, 100, 500)
for(i in C){
cat("For C=", i, "\n")
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = i, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / nrow(X)
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
cat("\nEquation\n")
cat("----------------------------------------------------------------\n")
cat(a0,"+",a[1],"+",a[2],"+",a[3],"+",a[4],"+\n",a[5],"+",a[6],"+",a[7],"+",a[8],"+",a[9],"+",a[10])
cat("\n\n")
print(confusionMatrix(table(pred, y), positive = "1"))
cat("\n\n")
}
