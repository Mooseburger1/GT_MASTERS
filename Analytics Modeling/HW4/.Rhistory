}
}
print(day_change)
plot(x = xp, y = forecast, xlab = 'Dates', ylab='Temperatures', main='Atlanta Temperatures in 1996 Using Median Temperature')
points(x = xp[day_index], y= forecast[day_index], col = 'red')
abline(h = median)
days_of_summer = rep(0,20)
for (i in seq(1,20)){
x = as.matrix(temps_ts[i,])
x = x[1:weather_change_index[i]]
days_of_summer[i] = length(x)
}
years = seq(1996, 2015)
data = c(years, days_of_summer)
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -30
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -20
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
forecast <- holt$fitted[,1]
median = median(forecast)
s = forecast[1]
C = 0.2
threshold = -10
for(i in seq(from = 2, to = length(forecast))){
s = s + (forecast[i] - median + C)
s = min(0, s)
print(s)
if (s < threshold){
day_change = days[i+6]
day_index = i
break
}
}
print(day_change)
plot(x = xp[7:length(xp)], y = forecast, xlab = 'Dates', ylab='Temperatures', main='Temperatures in 2012 w/ Median Temperature and 7 Day Moving Avg')
points(x = xp[day_index+6], y= forecast[day_index], col = 'red',pch=19, cex = 2)
abline(h = median)
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0.2
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
moving_average = SMA(temps[1,], n=7)
plot(moving_average, main = '7 Day Moving Average for 2012 Temperatures in Atlanta')
holt = HoltWinters(moving_average[7:length(moving_average)], alpha = 0.2, beta = 0.2, gamma = FALSE)
plot(holt)
forecast <- holt$fitted[,1]
median = median(forecast)
s = forecast[1]
C = 0.2
threshold = -10
for(i in seq(from = 2, to = length(forecast))){
s = s + (forecast[i] - median + C)
s = min(0, s)
print(s)
if (s < threshold){
day_change = days[i+6]
day_index = i
break
}
}
print(day_change)
plot(x = xp[7:length(xp)], y = forecast, xlab = 'Dates', ylab='Temperatures', main='Temperatures in 2012 w/ Median Temperature and 7 Day Moving Avg')
points(x = xp[day_index+6], y= forecast[day_index], col = 'red',pch=19, cex = 2)
abline(h = median)
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0.2
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[i+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0.2
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j+6
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0.2
threshold = -10
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
moving_average = SMA(temps[17,], n=7)
plot(moving_average, main = '7 Day Moving Average for 2012 Temperatures in Atlanta')
holt = HoltWinters(moving_average[7:length(moving_average)], alpha = 0.2, beta = 0.2, gamma = FALSE)
plot(holt)
moving_average = SMA(temps[17,], n=7)
plot(moving_average, main = '7 Day Moving Average for 2012 Temperatures in Atlanta')
holt = HoltWinters(moving_average[7:length(moving_average)], alpha = 0.2, beta = 0.2, gamma = FALSE)
plot(holt)
forecast <- holt$fitted[,1]
median = median(forecast)
s = forecast[1]
C = 0.2
threshold = -10
for(i in seq(from = 2, to = length(forecast))){
s = s + (forecast[i] - median + C)
s = min(0, s)
print(s)
if (s < threshold){
day_change = days[i+6]
day_index = i
break
}
}
print(day_change)
plot(x = xp[7:length(xp)], y = forecast, xlab = 'Dates', ylab='Temperatures', main='Temperatures in 2012 w/ Median Temperature and 7 Day Moving Avg')
points(x = xp[day_index+6], y= forecast[day_index], col = 'red',pch=19, cex = 2)
abline(h = median)
forecast <- holt$fitted[,1]
median = median(forecast)
s = forecast[1]
C = 0.2
threshold = -10
for(i in seq(from = 2, to = length(forecast))){
s = s + (forecast[i] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[i+6]
day_index = i
break
}
}
print(day_change)
plot(x = xp[7:length(xp)], y = forecast, xlab = 'Dates', ylab='Temperatures', main='Temperatures in 2012 w/ Median Temperature and 7 Day Moving Avg')
points(x = xp[day_index+6], y= forecast[day_index], col = 'red',pch=19, cex = 2)
abline(h = median)
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 0.2
threshold = -20
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -20
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -21
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -22
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
weather_change_index = rep(0, 20)
for (i in seq(1,20)){
moving_average = SMA(temps[i,], n=7)
temp_h <- HoltWinters(moving_average[7:length(moving_average)],alpha=0.2, beta = 0.2, gamma = FALSE)
x <- temp_h$fitted[,1]
median = median(x)
C = 1
threshold = -25
s = x[1] - median + C
for(j in seq(from = 2, to = length(x))){
s = s + (x[j] - median + C)
s = min(0, s)
if (s < threshold){
day_change = days[j+6]
day_index = j
weather_change_index[i] = day_index
break
}
}
plot(x = xp[7:length(xp)], y = x, xlab = 'Dates', ylab='Temperatures', main=c('Atlanta Temperatures in ', as.character(1995+i)))
points(x = xp[day_index+6], y= x[day_index], col = 'red', pch=19, cex = 2)
abline(h = median)
print(as.character(day_change))
}
days_of_summer = rep(0,20)
for (i in seq(1,20)){
x = as.matrix(temps_ts[i,])
x = x[1:weather_change_index[i]]
days_of_summer[i] = length(x)
}
years = seq(1996, 2015)
data = c(years, days_of_summer)
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
days_of_summer = rep(0,20)
for (i in seq(1,20)){
x = as.matrix(temps_ts[i,])
x = x[1:weather_change_index[i]]
days_of_summer[i] = length(x)
}
days_of_summer = days_of_summer[-13]
print(days_of_summer)
years = seq(1996, 2015)
data = c(years, days_of_summer)
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
days_of_summer = rep(0,20)
for (i in seq(1,20)){
x = as.matrix(temps_ts[i,])
x = x[1:weather_change_index[i]]
days_of_summer[i] = length(x)
}
print(days_of_summer)
years = seq(1996, 2015)
data = c(years, days_of_summer)
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
days_of_summer = days_of_summer[days_of_summer != 42]
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
days_of_summer = days_of_summer[days_of_summer != 47]
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
years = 1996:2014
days_of_summer = days_of_summer[days_of_summer != 47]
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
days_of_summer = rep(0,20)
for (i in seq(1,20)){
x = as.matrix(temps_ts[i,])
x = x[1:weather_change_index[i]]
days_of_summer[i] = length(x)
}
years = seq(1996, 2015)
data = c(years, days_of_summer)
plot(x = years, y = days_of_summer, xlab ='Years', ylab = 'Days of Summer', main = 'Days of Summer per Year')
abline(lm(formula = days_of_summer~years))
library(TTR)
temps <- read.table('temps.txt', header = TRUE, stringsAsFactors = FALSE)
#temps$DAY <- format(as.Date(temps$DAY, format = '%d-%b'), '%d-%b')
days <- temps$DAY
temps <- t(temps[,2:ncol(temps)])
colnames(temps) <- days
rownames(temps) <- 1996:2015
temps_ts <- ts(temps, start = 1996, frequency=1)
for(i in seq(from = 0.2, to = 0.5, by = 0.1)){
for(j in seq(from = 0.00, to = 0.5, by = 0.1)){
cat('Alpha: ',i, 'Beta: ', j,'\n')
temp_h <- HoltWinters(temps_ts[1,],alpha=i, beta = j, gamma = FALSE)
plot(temp_h)
}
}
# Input data into csv file
write.csv(mydata_hw2_sf, file = 'test.csv')
setwd("~/Analytics Modeling/HW4")
# Clear Environment
rm(list = ls())
# Read temps.txt file
mydata <- read.table("temps.txt", stringsAsFactors = FALSE, header = TRUE)
# Turn the dataset into a vector object
mydata_vec <- as.vector(unlist(mydata[,2:21]))
mydata_vec
# Turn my vector object into a time-series object as required by HoltWinters function
mydata_ts = ts(mydata_vec, start=1996, frequency = nrow(mydata))
mydata_ts
plot(mydata_ts)
#Simple Exponential Smoothing: determine to use either multiplicative or additive model by comparing the variance, the smaller the better
mydata_hw <- HoltWinters(mydata_ts, alpha = NULL, beta = NULL, gamma = NULL, seasonal = "multiplicative")
mydata_hw2 <- HoltWinters(mydata_ts, alpha = NULL, beta = NULL, gamma = NULL)
mydata_hw$SSE
mydata_hw2$SSE
# Turns out additive model has smaller variance
plot(mydata_hw2)
plot(mydata_hw2$fitted)
# This can extract the seasonality of each date
mydata_hw2$fitted[,4]
summary(mydata_hw2)
names(mydata_hw2)
# Create a matrix filled with each cell's seasonality, so we may examine the seasonality using CUSUM in excel later
mydata_hw2_sf <- matrix(mydata_hw2$fitted[,4], nrow=123)
mydata_hw2_sf
# Input data into csv file
write.csv(mydata_hw2_sf, file = 'test.csv')
