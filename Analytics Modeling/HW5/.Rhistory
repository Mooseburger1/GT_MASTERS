barplot(c(sum(pred == 1), sum(y==1), sum(pred==0),), names.arg = c("predictions 1", "actual 1", "predictions 0", "actual 0"))
require("kernlab")
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
X <- as.matrix(data[,1:10])
y <- as.matrix(data[,11])
model <- ksvm(x = X, y = y, type = "C-svc", kernel = "vanilladot",
C = 50, scaled = TRUE)
pred <- predict(model, X)
percentage <- sum(pred == y) / 654
a <- colSums(model@xmatrix[[1]] * model@coef[[1]])
a0 <- -model@b
barplot(c(sum(pred == 1), sum(y==1), sum(pred==0),), names.arg = c("predictions 1", "actual 1", "predictions 0", "actual 0"))
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
data <- read.csv("credit_card_data-headers.csv", header = TRUE)
setwd("~/Analytics Modeling/HW5")
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
View(data)
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
lm('data$Crime~.')
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
lm(data$Crime~.)
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
install.packages("GGally")
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
ggpairs(data, alpha=0.4)
#lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
pm = ggpairs(data=data,
columns=1:16,
upper = list(continuous = "density"),
lower = list(combo = "facetdensity"),
title="M vs Crime")
print(pm)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
pm = ggpairs(data=data,
columns=[1,16],
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
pm = ggpairs(data=data,
columns= 1,
upper = list(continuous = "density"),
lower = list(combo = "facetdensity"),
title="M vs Crime")
print(pm)
#lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
pm = ggpairs(data=data,
columns= 16~1,
upper = list(continuous = "density"),
lower = list(combo = "facetdensity"),
title="M vs Crime")
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
pm = ggpairs(data=data,
columns= c(1,16),
upper = list(continuous = "density"),
lower = list(combo = "facetdensity"),
title="M vs Crime")
print(pm)
#lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
for(i in seq(1,15)){
pm = ggpairs(data=data,
columns= c(i,16),
upper = list(continuous = "density"),
lower = list(combo = "facetdensity")
)
print(pm)
}
#lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
for(i in seq(1,15)){
pm = ggpairs(data=data,
columns= c(i,16),
)
print(pm)
}
#lm(data$Crime~. , data = data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
#lm(data$Crime~. , data = data)
for(i in seq(1,15)){
pm = ggpairs(data=data,
columns= c(i,16),
)
print(pm)
}
log_data = log(data[-16])
View(log_data)
View(log_data)
log_data = log(data[-16])
log_data['crime'] = data$Crime
View(log_data)
log_data = log(data[-16])
log_data['crime'] = data$Crime
for(i in seq(1,15)){
pm = ggpairs(data=log_data,
columns= c(i,16),
)
print(pm)
}
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
m2 <- lm(Crime ~ Po1 + Po2 + Prob + Wealth, data = data)
print(m1)
summary(m1)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data <- scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] <- data$Crime
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data <- scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] <- data$Crime
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
print(scaled_data)
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = scale(data[-16], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
print(scaled_data)
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
print(scaled_data)
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
print(scaled_data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
print(scaled_data)
library(ggplot2)
library(GGally)
#load the data
data = read.table('uscrime.txt', header = TRUE, stringsAsFactors = FALSE)
#lm(data$Crime~. , data = data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data['Crime'] = data$Crime
print(scaled_data)
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
scaled_data
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
data$Crime
scaled_data = scale(data[1:15], center = TRUE, scale = TRUE)
log_data
scaled_data = as.data.frame(scale(data[1:15], center = TRUE, scale = TRUE))
scaled_data
scaled_data = as.data.frame(scale(data[1:15], center = TRUE, scale = TRUE))
scaled_data['Crime'] = data$Crime
scaled_data
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = as.data.frame(scale(data[1:15], center = TRUE, scale = TRUE))
scaled_data['Crime'] = data$Crime
scaled_data
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
#model 1 - all independent variables
m1 <- lm(Crime ~ ., data = data)
scaled_data = as.data.frame(scale(data[1:15], center = TRUE, scale = TRUE))
scaled_data['Crime'] = data$Crime
#model 2 - high correlation independent variables
m2 <- lm(Crime ~ ., data = scaled_data)
summary(m1)
summary(m2)
m3 <- lm(Crime ~ Po1 + Po2 + Prob + Wealth, data = data)
summary(m3)
new_data = as.data.frame(c(M = 14.0
So = 0
new_data = as.matrix(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
new_data
new_data = as.matrix(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
predict(m2, new_data)
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
predict(m2, new_data)
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(new_data) = colnames(data)
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(new_data) = colnames(data[1:15])
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(new_data) = colnames(data)[1:15]
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(data)
colnames(new_data) = colnames(data)[1:15]
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(data)[1:15]
colnames(new_data) = colnames(data)[1:15]
new_data = as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
new_data
colnames(new_data) = colnames(data)[1:15]
new_data = t(as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
new_data
colnames(new_data) = colnames(data)[1:15]
predict(m2, new_data)
new_data = t(as.data.frame(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
new_data
predict(m2, new_data)
new_data = t((c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
new_data
predict(m2, new_data)
new_data = as.data.frame(t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
new_data
predict(m2, new_data)
new_data = as.data.frame(t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
new_data = scale(new_data, center=TRUE, scale=TRUE)
predict(m2, new_data)
new_data = t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0))
colnames(new_data) = colnames(data)[1:15]
new_data = as.data.frame(scale(new_data, center=TRUE, scale=TRUE))
predict(m2, new_data)
View(new_data)
new_data = as.data.frame(t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
predict(m2, new_data)
new_data = as.data.frame(t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
predict(m1, new_data)
m1$coefficients
new_data = as.data.frame(t(c(14.0,0,10.0,12.0,15.5,0.640,94.0,150,1.1,0.120,3.6,3200,20.1,0.04,39.0)))
colnames(new_data) = colnames(data)[1:15]
prediction = predict(m1, new_data)
print(prediction)
