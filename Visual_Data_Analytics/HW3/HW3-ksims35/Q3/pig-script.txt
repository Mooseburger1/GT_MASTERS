-- Change the value of this parameter to be your GTID
%DEFAULT GTID 'ksims35';

yellow_raw3 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2014*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw4 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2015*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw5 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2016*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw6 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2017*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw7 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2018*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw8 = LOAD 's3://nyc-tlc/trip data/yellow_tripdata_2019*' USING PigStorage(',') AS (vendor:int, pickup_datetime:chararray, dropoff_datetime:chararray, passenger_count:int, trip_distance:float, ratecode:int, store_and_fwd_flag:chararray, PULocationID:int, DOLocationID:int, payment_type:int, fare_amount:float, extra:float, tip_amount:float, tolls_amount:float, improvement_surcharge:float, total_amount:float, congestion_surcharge:float);
yellow_raw = UNION yellow_raw3, yellow_raw4, yellow_raw5, yellow_raw6, yellow_raw7, yellow_raw8;
yellow = FILTER yellow_raw by pickup_datetime != 'tpep_pickup_datetime';

green_raw2 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2014*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw3 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2015*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw4 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2016*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw5 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2017*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw6 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2018*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw7 = LOAD 's3://nyc-tlc/trip data/green_tripdata_2019*' USING PigStorage(',') AS (vendor: int, pickup_datetime:chararray, dropoff_datetime:chararray, store_and_fwd_flag:chararray, ratecode:int, PULocationID:int, DOLocationID:int, passenger_count:int, trip_distance:float, fare_amount:float, extra:float, mta_tax:float, tip_amount:float, tolls_amount:float, ehail_fee:float, improvement_surcharge:float, total_amount:float, payment_type:int, trip_type:int, congestion_surchage:float);
green_raw = UNION green_raw2, green_raw3, green_raw4, green_raw5, green_raw6, green_raw7;
green = FILTER green_raw BY pickup_datetime != 'lpep_pickup_datetime';

locations_raw = LOAD 's3://nyc-tlc/misc/taxi _zone_lookup.csv' USING PigStorage(',') AS (LocationID:int, Borough:chararray, Zone:chararray, service_zone:chararray);
locations = FOREACH locations_raw GENERATE $0, REPLACE($1, '"', '') AS Borough, REPLACE($2, '"', '') AS Zone;

-- Code Below Here

green_filter= FILTER green BY trip_distance >= 2.0;
green_filter = FOREACH green_filter GENERATE passenger_count, PULocationID, DOLocationID, fare_amount, tip_amount, total_amount;


yellow_filter = FILTER yellow BY trip_distance >= 2.0;
yellow_filter = FOREACH yellow_filter GENERATE passenger_count, PULocationID, DOLocationID, fare_amount, tip_amount, total_amount;

union_data = UNION green_filter, yellow_filter;

grouped = GROUP union_data BY DOLocationID;

popular = FOREACH grouped GENERATE FLATTEN(group), SUM(union_data.passenger_count);
popular = ORDER popular BY $1 DESC;
popular = limit popular 20;


avgs = GROUP union_data BY PULocationID;
avgs = FOREACH avgs GENERATE FLATTEN(group), AVG(union_data.total_amount) AS AVG:float;



puloc = JOIN union_data BY DOLocationID, popular BY $0;
puloc_grp = GROUP puloc BY PULocationID;
numerator = FOREACH puloc_grp GENERATE FLATTEN(group) AS PULOC, COUNT(puloc.passenger_count) AS NUMER:float;

puloc_full_grp = GROUP union_data BY PULocationID;
denominator = FOREACH puloc_full_grp GENERATE FLATTEN(group) AS PULOC, COUNT(union_data.passenger_count) AS DENOM:float;

prop = JOIN numerator BY PULOC, denominator BY PULOC;
prop = FOREACH prop GENERATE $0, $1 / $3 AS proportion:float;

calc = JOIN avgs BY $0, prop BY $0;
calc = FOREACH calc GENERATE $0, $1 * $3 AS CALC:float;

final = JOIN calc BY $0, popular BY $0;
final = JOIN calc BY $0, locations BY $0;
final = FOREACH final GENERATE $3, $4, $1;
